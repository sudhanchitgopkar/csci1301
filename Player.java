/*
 * Player.java
 * Author: Sudhan Chitgopkar
 * Submission Date: 10/17/19
 *
 * Purpose: This program contains methods for the Player class which will be used in conjunction with both the
 * Engine and Bagels class in order to complete the game "Pico, Fermi, Bagels" - specifically, this class asks 
 * for the user to guess the secret number generated by the computer, gets and sets the user name, gets the 
 * fastestWin and amount of games completed, and updates those statistics for each game played.
 *   
 *
 * Statement of Academic Honesty:
 *
 * The following code represents my own work. I have neither
 * received nor given inappropriate assistance. I have not copied
 * or modified code from any source other than the course webpage
 * or the course textbook. I recognize that any unauthorized
 * assistance or plagiarism will be handled in accordance with
 * the University of Georgia's Academic Honesty Policy and the
 * policies of this course. I recognize that my work is based
 * on an assignment created by the Department of Computer
 * Science at the University of Georgia. Any publishing
 * or posting of source code for this project is strictly
 * prohibited unless you have written consent from the Department
 * of Computer Science at the University of Georgia.
 */

//imports Scanner class to acquire user input
import java.util.Scanner;
public class Player {
	
	//instance variable declarations
	public String name;
	private int fastestWin;
	private int gamesCompleted;
	private Scanner keyboard=new Scanner (System.in);
	
	public String askForGuess() {
		String guess;
		//asks user for guess through print statements, provides area for guess input
		System.out.print("Enter your guess: ");
		guess=keyboard.next();
		return guess;
	}
	
	public String getName() {
		String name;
		//asks user for name through print statements, provides area for name input
		System.out.print("Enter the player's name: ");
		name=keyboard.next();
		return name;
	}
	
	//returns fastestWin
	public int getFastestWin() {
		return fastestWin;
		
	}
	
	//returns gamesCompleted
	public int getGamesCompleted() {
		return gamesCompleted;
		
	}
	
	//sets name to new instance of name
	public void setName(String name) {
		this.name=name;
		
	}
	//sets fastestWin to new instance of numberMoves, which equals numMoves
	public void updateStats(int numMoves) {
		int numberMoves=numMoves;
		this.fastestWin=numberMoves;
	}

}
